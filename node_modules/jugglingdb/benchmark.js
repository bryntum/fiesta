var limit = 10;
var success = 0;
var Schema = require('./').Schema;
var AC = require('./').AbstractClass;
var s = new Schema('redis2', {});
var util = require('util');
s.setMaxListeners(100);


var Model = s.define('Model', {
    prop: String,
    json1: function JSON() {},
    json2: function JSON() {},
    json3: function JSON() {},
    p1: String,
    p2: String,
    p3: String,
    pd1: Date,
    pd2: Date,
    pb: Boolean
});

Model.all({limit: 2}, function (err, data) {
    console.log(data);
    s.disconnect();
});

var i = 0;
function benchmark() {
    var time = Date.now();
    Model.all(function (err, data) {
        data.forEach(function (el) {
            el.p1 = el.p2;
        });

        console.log(i, Date.now() - time, Math.round(process.memoryUsage().heapUsed / 1024 / 1024), Math.round(process.memoryUsage().heapTotal / 1024 / 1024));
        if (++i < 50) return benchmark();
        else s.disconnect();
    });

};

// benchmark();

